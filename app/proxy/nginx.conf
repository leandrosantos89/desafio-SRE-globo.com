user			root;
worker_processes	auto;
include			/etc/nginx/modules-enabled/*.conf;

worker_rlimit_nofile 257052;

events {
	worker_connections  8192;

    # optimized to serve many clients with each thread, essential for linux -- for testing environment
    use epoll;

    # accept as many connections as possible, may flood worker connections if set too low -- for testing environment
    multi_accept on;
}

http {

    access_log off; # for performance test only
    tcp_nodelay on;
    keepalive_requests 100000;


	server_tokens           off;
	client_max_body_size	100M;
	limit_req_zone		$binary_remote_addr zone=protecao:10m rate=5r/s;
	include			mime.types;
	default_type		application/octet-stream;
	sendfile		on;
	keepalive_timeout	65;
	#vhost_traffic_status_filter_by_host     on;
	#vhost_traffic_status_zone;
	proxy_buffer_size	128k;
	proxy_buffers		4 256k;
	proxy_busy_buffers_size	256k;
	log_format json '{ "time": "$time_iso8601", ' '"remote_addr": "$remote_addr", ' '"upstream_addr": "$upstream_addr", ' '"remote_user": "$remote_user", ' '"body_bytes_sent": "$body_bytes_sent", ' '"request_time": $request_time, ' '"status": $status, ' '"request": "$request", ' '"request_method": "$request_method", ' '"http_referrer": "$http_referer", ' '"http_user_agent": "$http_user_agent" }';
		map $http_user_agent $filter_user_agent {
			default 'unknown';
			~iPhone ios;
			~Android android;
			~(MSIE|Mozilla) windows;
		}
	#error_page	404  /404.html;
	# error_page	500 502 503 504  /5xx.html;
	# vhost_traffic_status_histogram_buckets  0.002 0.005 0.01 0.02 0.05 0.1 0.2 0.5 1 2 5 10 15 20;
	# proxy_intercept_errors	on;
	# server {
	# 	server_name	_;
	# 	listen		0.0.0.0:9089;
	# 	vhost_traffic_status_filter_by_set_key $filter_user_agent agent::$server_name;
	# 	location / {
	# 		vhost_traffic_status_display;
	# 		vhost_traffic_status_display_format prometheus;
	# 		include /etc/nginx/prometheus.conf;
	# 		deny all;
	# 		#error_page      404  /404.html;
	# 		error_page      500 502 503 504  /5xx.html;
	# 	}
	# 	location /404.html {
	# 		root	/usr/share/nginx/html;
	# 		internal;
	# 	}
	# 	location /5xx.html {
	# 		root	/usr/share/nginx/html;
	# 		internal;
	# 	}
	# }
	include /etc/nginx/sites-enabled/*.conf;
	include /etc/nginx/conf.d/*.conf;
}
